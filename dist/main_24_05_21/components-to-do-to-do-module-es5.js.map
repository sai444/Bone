{"version":3,"sources":["webpack:///src/app/components/to-do/to-do.component.ts","webpack:///src/app/components/to-do/to-do.component.html","webpack:///src/app/components/to-do/to-do.module.ts","webpack:///src/app/components/to-do/to-do-routing.module.ts"],"names":["ToDoComponent","toastrService","http","todos","red_border","url","getData","text","task","completed","push","success","error","get","responseType","subscribe","res","console","log","index","splice","action","filter","markAllAction","addTask","selector","templateUrl","styleUrls","ToDoModule","declarations","imports","routes","path","children","component","data","title","breadcrumb","ToDoRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;AC+BoB;;AACE;;AACE;;AAAuB;;AAAa;;AACpC;;AACE;;AAA8D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AACtE;;AAA0B;;AAAI;;AAC/C;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAgB;;AAA0B;;AAAI;;AAChF;;AACF;;AACF;;;;;;AAViB;;AAEU;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;UDjBlCA,a;AAQX,+BAAoBC,aAApB,EAA0DC,IAA1D,EAA4E;AAAA;;AAAxD,eAAAD,aAAA,GAAAA,aAAA;AAAsC,eAAAC,IAAA,GAAAA,IAAA;AALnD,eAAAC,KAAA,GAAa,EAAb;AAEA,eAAAC,UAAA,GAAsB,KAAtB;AAIP,eAAAC,GAAA,GAAM,4BAAN;AAD+E;;;;qCAEpE;AACT,iBAAKC,OAAL;AACA;;;kCAEaC,I,EAAM;AACnB,gBAAI,CAACA,IAAL,EAAW;AACT,mBAAKH,UAAL,GAAkB,IAAlB;AACA,qBAAO,KAAP;AACD;;AACD,gBAAII,IAAI,GAAG;AAAED,kBAAI,EAAEA,IAAR;AAAcE,uBAAS,EAAE;AAAzB,aAAX;AAEA,iBAAKN,KAAL,CAAWO,IAAX,CAAgBF,IAAhB;AACA,iBAAKD,IAAL,GAAY,EAAZ;AACA,iBAAKH,UAAL,GAAkB,KAAlB;AACD;;;wCAEoBI,I,EAAM;AACzBA,gBAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACAD,gBAAI,CAACC,SAAL,GAAiB,KAAKR,aAAL,CAAmBU,OAAnB,CAA2BH,IAAI,CAACD,IAAhC,EAAsC,mBAAtC,CAAjB,GAA8E,KAAKN,aAAL,CAAmBW,KAAnB,CAAyBJ,IAAI,CAACD,IAA9B,EAAoC,qBAApC,CAA9E;AACD;;;oCACS;AAAA;;AACR,iBAAKL,IAAL,CAAUW,GAAV,CAAc,KAAKR,GAAnB,EAAwB;AAAES,0BAAY,EAAE;AAAhB,aAAxB,EAAkDC,SAAlD,CAA4D,UAAAC,GAAG,EAAI;AACjE,mBAAI,CAACb,KAAL,GAAaa,GAAb;AACAC,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,KAAI,CAACf,KAA/B;AAED,aAJD;AAKD;;;sCACkBgB,K,EAAO;AACxB,iBAAKhB,KAAL,CAAWiB,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB;AACD;;;wCAEoBE,M,EAAQ;AAC3B,iBAAKlB,KAAL,CAAWmB,MAAX,CAAkB,UAAAd,IAAI,EAAI;AACxBA,kBAAI,CAACC,SAAL,GAAiBY,MAAjB;AACD,aAFD;AAGA,iBAAKZ,SAAL,GAAiBY,MAAjB;AACAA,kBAAM,GAAG,KAAKpB,aAAL,CAAmBU,OAAnB,CAA2B,uBAA3B,CAAH,GAAyD,KAAKV,aAAL,CAAmBW,KAAnB,CAAyB,yBAAzB,CAA/D;AACD;;;;;;;yBA/CUZ,a,EAAa,yH,EAAA,gI;AAAA,O;;;cAAbA,a;AAAa,kC;AAAA,iB;AAAA,gB;AAAA,m/C;AAAA;AAAA;ACf1B;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAK;;AACX;;AACA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAwB;;AAAoB;;AAC5C;;AAAmC;AAAA,qBAAS,IAAAuB,aAAA,CAAc,IAAd,CAAT;AAA4B,aAA5B;;AACjC;;AAAgB;;AAA0B;;AAC5C;;AACF;;AACA;;AAEE;;AAAwB;;AAAqB;;AAC7C;;AAAyB;AAAA,qBAAS,IAAAA,aAAA,CAAc,KAAd,CAAT;AAA6B,aAA7B;;AACvB;;AAAgB;;AAA0B;;AAC5C;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAWF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAgC;AAAA,mCAAiB,IAAjB;AAAqB,aAArB;;AAC9B;;AAA8B;;AAChC;;AACF;;AACF;;AACA;;AACE;;AAA+D;AAAA;AAAA;;AAC1B;;AACrC;;AACE;AAAA,mCAAiB,KAAjB;AAAsB,aAAtB;;AAAwB;;AAAK;;AAC/B;;AAAoE;AAAA,qBAAS,IAAAC,OAAA,UAAT;AAAsB,aAAtB;;AAAwB;;AACtF;;AACR;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAG;;AAA0B;;AAAuC;;AACtE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAzD+C;;AAAA;;AAMA;;AAAA;;AAWgD;;AAAA;;AAehD;;AAAA;;AAMC;;AAAA;;AAE1B;;AAAA;;AAD6D;;;;;;;;2HDrCtExB,a,EAAa;gBALzB,uDAKyB;iBALf;AACTyB,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;AEhB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBaC,U;;;;;cAAAA;;;;2BAAAA,U;AAAU,S;AAAA,kBAPZ,CACP,4DADO,EAEP,0DAFO,EAGP,uEAHO,EAIP,qEAJO,CAOY;;;;4HAAVA,U,EAAU;AAAA,yBARN,8DAQM;AARO,oBAE1B,4DAF0B,EAG1B,0DAH0B,EAI1B,uEAJ0B,EAK1B,qEAL0B;AAQP,S;AAHH,O;;;2HAGPA,U,EAAU;gBATtB,sDASsB;iBATb;AACRC,wBAAY,EAAE,CAAC,8DAAD,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,uEAHO,EAIP,qEAJO;AAFD,W;AASa,U;;;;;;;;;;;;;;;;;;AChBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,gBAAQ,EAAE,CACR;AACED,cAAI,EAAE,EADR;AAEEE,mBAAS,EAAE,8DAFb;AAGEC,cAAI,EAAE;AACJC,iBAAK,EAAE,OADH;AAEJC,sBAAU,EAAE;AAFR;AAHR,SADQ;AAFZ,OADqB,CAAvB;;UAoBaC,iB;;;;;cAAAA;;;;2BAAAA,iB;AAAiB,S;AAAA,kBAHnB,CAAC,6DAAaC,QAAb,CAAsBR,MAAtB,CAAD,CAGmB,EAFlB,4DAEkB;;;;4HAAjBO,iB,EAAiB;AAAA;AAAA,oBAFlB,4DAEkB;AAAA,S;AAFN,O;;;2HAEXA,iB,EAAiB;gBAJ7B,sDAI6B;iBAJpB;AACRR,mBAAO,EAAE,CAAC,6DAAaS,QAAb,CAAsBR,MAAtB,CAAD,CADD;AAERS,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIoB,U","file":"components-to-do-to-do-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport * as data from '../../shared/data/todo/todo';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpClient } from '@angular/common/http';\r\nexport interface Task {\r\n  text: string\r\n  completed: boolean\r\n\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-to-do',\r\n  templateUrl: './to-do.component.html',\r\n  styleUrls: ['./to-do.component.scss']\r\n})\r\nexport class ToDoComponent implements OnInit {\r\n\r\n  public text: string;\r\n  public todos : any= [];\r\n  public completed: boolean;\r\n  public red_border: boolean = false;\r\n  public visible: boolean\r\n\r\n  constructor(private toastrService: ToastrService ,private http: HttpClient) { }\r\n  url = 'http://localhost:5000/todo'\r\n  ngOnInit() {\r\n    this.getData();\r\n   }\r\n\r\n  public addTask(text) {\r\n    if (!text) {\r\n      this.red_border = true;\r\n      return false;\r\n    }\r\n    let task = { text: text, completed: false }\r\n\r\n    this.todos.push(task);\r\n    this.text = '';\r\n    this.red_border = false;\r\n  }\r\n\r\n  public taskCompleted(task) {\r\n    task.completed = !task.completed\r\n    task.completed ? this.toastrService.success(task.text, \"Mark as completed\") : this.toastrService.error(task.text, \"Mark as Incompleted\")\r\n  }\r\n  getData() {\r\n    this.http.get(this.url, { responseType: 'text' }).subscribe(res => {\r\n      this.todos = res;\r\n      console.log('this.todos ',this.todos );\r\n\r\n    });\r\n  }\r\n  public taskDeleted(index) {\r\n    this.todos.splice(index, 1);\r\n  }\r\n\r\n  public markAllAction(action) {\r\n    this.todos.filter(task => {\r\n      task.completed = action\r\n    })\r\n    this.completed = action\r\n    action ? this.toastrService.success(\"All Task as Completed\") : this.toastrService.error(\"All Task as Incompleted\")\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h5>To-Do</h5>\r\n        </div>\r\n        <div class=\"card-body\" style=\"    background-color: aliceblue;\">\r\n          <div class=\"todo\">\r\n            <div class=\"todo-list-wrapper\">\r\n              <div class=\"todo-list-container\">\r\n                <div class=\"mark-all-tasks\">\r\n                  <div class=\"mark-all-tasks-container\">\r\n                    <span class=\"mark-all-btn\" [ngClass]=\"{'move-up':completed}\" id=\"mark-all-finished\" role=\"button\">\r\n                      <span class=\"btn-label\">Mark all as finished</span>\r\n                      <span class=\"action-box completed\" (click)=\"markAllAction(true);\">\r\n                        <i class=\"icon\"><i class=\"icon-check\"></i></i>\r\n                      </span>\r\n                    </span>\r\n                    <span class=\"mark-all-btn\" [ngClass]=\"{'move-down':!completed}\" id=\"mark-all-incomplete\"\r\n                      role=\"button\">\r\n                      <span class=\"btn-label\">Mark all as completed</span>\r\n                      <span class=\"action-box\" (click)=\"markAllAction(false);\">\r\n                        <i class=\"icon\"><i class=\"icon-check\"></i></i>\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"todo-list-body\">\r\n                  <ul id=\"todo-list\">\r\n                    <li class=\"task\" [ngClass]=\"{'completed':todo.completed}\" *ngFor=\"let todo of todos;let i=index\" style=\"margin-bottom: 10px\">\r\n                      <div class=\"task-container\">\r\n                        <h4 class=\"task-label\">{{todo.text}}</h4>\r\n                        <span class=\"task-action-btn\">\r\n                          <span class=\"action-box large delete-btn\" title=\"Delete Task\" (click)=\"taskDeleted(i)\"><i\r\n                              class=\"icon\"><i class=\"icon-trash\"></i></i></span>\r\n                          <span class=\"action-box large complete-btn\" title=\"Mark Complete\"\r\n                            (click)=\"taskCompleted(todo)\"><i class=\"icon\"><i class=\"icon-check\"></i></i></span>\r\n                        </span>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"todo-list-footer\">\r\n                  <div class=\"add-task-btn-wrapper\">\r\n                    <span class=\"add-task-btn\" [ngClass]=\"{'hide':visible}\">\r\n                      <button class=\"btn btn-primary\" (click)=\"visible=true\">\r\n                        <i class=\"icon-plus mr-1\"></i>Add new task\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"new-task-wrapper\" [ngClass]=\"{'visible':visible}\">\r\n                    <textarea id=\"new-task\" placeholder=\"Enter new task here. . .\" [(ngModel)]=\"text\"\r\n                      [class.border-danger]=\"red_border\"></textarea>\r\n                    <button class=\"btn btn-danger cancel-btn\" id=\"close-task-panel\"\r\n                      (click)=\"visible=false\">Close</button>\r\n                    <button class=\"btn btn-success ml-3 add-new-task-btn\" id=\"add-task\" (click)=\"addTask(text)\">Add\r\n                      Task</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"notification-popup hide\">\r\n              <p><span class=\"task\"></span><span class=\"notification-text\"></span></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ToDoRoutingModule } from './to-do-routing.module';\r\nimport { ToDoComponent } from './to-do.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n@NgModule({\r\n  declarations: [ToDoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ToDoRoutingModule,\r\n    HttpClientModule\r\n  ]\r\n})\r\nexport class ToDoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ToDoComponent } from './to-do.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ToDoComponent,\r\n        data: {\r\n          title: \"To-Do\",\r\n          breadcrumb: \"\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ToDoRoutingModule { }\r\n"]}