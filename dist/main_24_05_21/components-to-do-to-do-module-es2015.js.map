{"version":3,"sources":["./src/app/components/to-do/to-do.component.ts","./src/app/components/to-do/to-do.component.html","./src/app/components/to-do/to-do.module.ts","./src/app/components/to-do/to-do-routing.module.ts"],"names":[],"mappings":"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","file":"components-to-do-to-do-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport * as data from '../../shared/data/todo/todo';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpClient } from '@angular/common/http';\r\nexport interface Task {\r\n  text: string\r\n  completed: boolean\r\n\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-to-do',\r\n  templateUrl: './to-do.component.html',\r\n  styleUrls: ['./to-do.component.scss']\r\n})\r\nexport class ToDoComponent implements OnInit {\r\n\r\n  public text: string;\r\n  public todos : any= [];\r\n  public completed: boolean;\r\n  public red_border: boolean = false;\r\n  public visible: boolean\r\n\r\n  constructor(private toastrService: ToastrService ,private http: HttpClient) { }\r\n  url = 'http://localhost:5000/todo'\r\n  ngOnInit() {\r\n    this.getData();\r\n   }\r\n\r\n  public addTask(text) {\r\n    if (!text) {\r\n      this.red_border = true;\r\n      return false;\r\n    }\r\n    let task = { text: text, completed: false }\r\n\r\n    this.todos.push(task);\r\n    this.text = '';\r\n    this.red_border = false;\r\n  }\r\n\r\n  public taskCompleted(task) {\r\n    task.completed = !task.completed\r\n    task.completed ? this.toastrService.success(task.text, \"Mark as completed\") : this.toastrService.error(task.text, \"Mark as Incompleted\")\r\n  }\r\n  getData() {\r\n    this.http.get(this.url, { responseType: 'text' }).subscribe(res => {\r\n      this.todos = res;\r\n      console.log('this.todos ',this.todos );\r\n\r\n    });\r\n  }\r\n  public taskDeleted(index) {\r\n    this.todos.splice(index, 1);\r\n  }\r\n\r\n  public markAllAction(action) {\r\n    this.todos.filter(task => {\r\n      task.completed = action\r\n    })\r\n    this.completed = action\r\n    action ? this.toastrService.success(\"All Task as Completed\") : this.toastrService.error(\"All Task as Incompleted\")\r\n  }\r\n}\r\n","<!-- Container-fluid starts-->\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-xl-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h5>To-Do</h5>\r\n        </div>\r\n        <div class=\"card-body\" style=\"    background-color: aliceblue;\">\r\n          <div class=\"todo\">\r\n            <div class=\"todo-list-wrapper\">\r\n              <div class=\"todo-list-container\">\r\n                <div class=\"mark-all-tasks\">\r\n                  <div class=\"mark-all-tasks-container\">\r\n                    <span class=\"mark-all-btn\" [ngClass]=\"{'move-up':completed}\" id=\"mark-all-finished\" role=\"button\">\r\n                      <span class=\"btn-label\">Mark all as finished</span>\r\n                      <span class=\"action-box completed\" (click)=\"markAllAction(true);\">\r\n                        <i class=\"icon\"><i class=\"icon-check\"></i></i>\r\n                      </span>\r\n                    </span>\r\n                    <span class=\"mark-all-btn\" [ngClass]=\"{'move-down':!completed}\" id=\"mark-all-incomplete\"\r\n                      role=\"button\">\r\n                      <span class=\"btn-label\">Mark all as completed</span>\r\n                      <span class=\"action-box\" (click)=\"markAllAction(false);\">\r\n                        <i class=\"icon\"><i class=\"icon-check\"></i></i>\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"todo-list-body\">\r\n                  <ul id=\"todo-list\">\r\n                    <li class=\"task\" [ngClass]=\"{'completed':todo.completed}\" *ngFor=\"let todo of todos;let i=index\" style=\"margin-bottom: 10px\">\r\n                      <div class=\"task-container\">\r\n                        <h4 class=\"task-label\">{{todo.text}}</h4>\r\n                        <span class=\"task-action-btn\">\r\n                          <span class=\"action-box large delete-btn\" title=\"Delete Task\" (click)=\"taskDeleted(i)\"><i\r\n                              class=\"icon\"><i class=\"icon-trash\"></i></i></span>\r\n                          <span class=\"action-box large complete-btn\" title=\"Mark Complete\"\r\n                            (click)=\"taskCompleted(todo)\"><i class=\"icon\"><i class=\"icon-check\"></i></i></span>\r\n                        </span>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"todo-list-footer\">\r\n                  <div class=\"add-task-btn-wrapper\">\r\n                    <span class=\"add-task-btn\" [ngClass]=\"{'hide':visible}\">\r\n                      <button class=\"btn btn-primary\" (click)=\"visible=true\">\r\n                        <i class=\"icon-plus mr-1\"></i>Add new task\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"new-task-wrapper\" [ngClass]=\"{'visible':visible}\">\r\n                    <textarea id=\"new-task\" placeholder=\"Enter new task here. . .\" [(ngModel)]=\"text\"\r\n                      [class.border-danger]=\"red_border\"></textarea>\r\n                    <button class=\"btn btn-danger cancel-btn\" id=\"close-task-panel\"\r\n                      (click)=\"visible=false\">Close</button>\r\n                    <button class=\"btn btn-success ml-3 add-new-task-btn\" id=\"add-task\" (click)=\"addTask(text)\">Add\r\n                      Task</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"notification-popup hide\">\r\n              <p><span class=\"task\"></span><span class=\"notification-text\"></span></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Container-fluid Ends-->\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { ToDoRoutingModule } from './to-do-routing.module';\r\nimport { ToDoComponent } from './to-do.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n@NgModule({\r\n  declarations: [ToDoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ToDoRoutingModule,\r\n    HttpClientModule\r\n  ]\r\n})\r\nexport class ToDoModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ToDoComponent } from './to-do.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: ToDoComponent,\r\n        data: {\r\n          title: \"To-Do\",\r\n          breadcrumb: \"\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ToDoRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}